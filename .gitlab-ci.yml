image: "ruby:2.4.3-alpine3.7"

services:
  - postgres:alpine

stages:
  # - test
  - deploy

test_all:
  stage: test
  variables:
    POSTGRES_USER: test
    POSTGRES_PASSSWORD: test-password
    POSTGRES_DB: test_db
    DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSSWORD}@postgres/${POSTGRES_DB}
    RAILS_ENV: test
    CHROME_BIN: /usr/bin/chromium-browser
    CHROME_PATH: /usr/lib/chromium/

  before_script:
    - apk update && apk add --update build-base postgresql-dev nodejs chromium chromium-chromedriver libexif udev curl-dev less git yarn redis
    - gem install bundler  --no-ri --no-rdoc
    - gem install tzinfo-data
    - bundle install
    - rails db:migrate

  script:
    - rubocop
    - rails test

production_deploy:
  stage: deploy
  variables:
    RAILS_ENV: production
  only:
    - master
  before_script:
    #- apk update && apk add --update build-base postgresql-dev nodejs chromium chromium-chromedriver libexif udev curl-dev less git yarn redis
    #- mkdir -p ~/.ssh && chmod 700 ~/.ssh
    - echo "$DEPLOYER_KEY" > ~/.ssh/id_rsa && chmod 600 ~/.ssh/id_rsa
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - chmod 600 ~/.ssh/config
    - cat ~/.ssh/id_rsa
    - "ssh -vvv ubuntu@social-linking.prosumia.la uname -a"
    #- gem install bundler  --no-ri --no-rdoc
    #- bundle install


  script:
    - bundle exec cap production deploy
